
正则表达式介绍

正则表达式提供了功能强大、灵活而又高效的方法来处理文本。 
使用正则表达式的全面模式匹配表示法，可以快速分析大量文本，以找到特定的字符模式；
验证文本以确保它匹配预定义模式（如电子邮件地址）；
提取、编辑、替换或删除文本子字符串；
将提取的字符串添加到集合以生成报告。 
对于处理字符串或分析大文本块的许多应用程序而言，正则表达式是不可缺少的工具。

正则表达式中的分组构造  https://docs.microsoft.com/en-us/dotnet/standard/base-types/grouping-constructs-in-regular-expressions

1、匹配的子表达式
以下分组构造捕获匹配的子表达式：
( 子表达式 )
其中 子表达式 为任何有效正则表达式模式。 使用括号的捕获按正则表达式中左括号的顺序从一开始从左到右自动编号。 捕获元素编号为零的捕获是由整个正则表达式模式匹配的文本。


默认情况下， (子表达式) 语言元素捕获匹配的子表达式。 但是，如果正则表达式模式匹配方法的 RegexOptions 参数包含 RegexOptions.ExplicitCapture 标志，或者如果 n 选项应用于此子表达式（参见本主题后面的 组选项 ），则不会捕获匹配的子表达式。
可以四种方法访问捕获的组：
通过使用正则表达式中的反向引用构造。 使用语法 \数字在同一正则表达式中引用匹配的子表达式，其中 数字 是捕获的表达式的初始数字。
通过使用正则表达式中的命名的反向引用构造。 使用语法 \k<name>在同一正则表达式中引用匹配的子表达式，其中 name 是捕获组的名称，或使用 \k<数字>在同一正则表达式中引用匹配的子表达式，其中 数字 是捕获组的初始数字。 捕获组具有与其原始编号相同的默认名称。 
通过使用 $数字 $ Regex.Replace number Match.Result 替换序列，其中 数字 是捕获的表达式的初始数字。
以编程的方式，通过使用 GroupCollection 对象的方式，该对象由 Match.Groups 属性返回。 集合中位置零上的成员表示正则表达式匹配。 每个后续成员表示匹配的子表达式。

2、命名匹配的子表达式
以下分组构造捕获匹配的子表达式，并允许你按名称或编号访问它：

(?<name>subexpression)  

(?'name'subexpression)  
其中 名称 是有效的组名称，而 子表达式 是任何有效的正则表达式模式。 名称 不得包含任何标点符号字符，并且不能以数字开头。

